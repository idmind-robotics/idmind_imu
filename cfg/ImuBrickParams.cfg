#!/usr/bin/env python

PACKAGE = "idmind_imu"
import roslib; roslib.load_manifest(PACKAGE)
from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()
# General node parameters
gen.add("control_freq",                   double_t,      0, "Node Control Frequency",                       100.0, 0.0, 200.0)
gen.add("imu_freq",                       double_t,      0, "IMU Update Frequency",                         100, 0.01, 1000)
gen.add("timeout",                        double_t,      0, "Timeout for assuming IMU problem",             5.0, 0.1, 10.0)
gen.add("imu_frame",                      str_t,         0, "IMU Frame (with prefix)",                      "imu")
gen.add("imu_leds",                       bool_t,        0, "Status LEDS state",                            True)

mag_config_enum = gen.enum([ gen.const("2Hz",      int_t, 0, "2Hz"),
                             gen.const("6Hz",      int_t, 1, "6Hz"),
                             gen.const("8Hz",      int_t, 2, "8Hz"),
                             gen.const("10Hz",     int_t, 3, "10Hz"),
                             gen.const("15Hz",     int_t, 4, "15Hz"),
                             gen.const("20Hz",     int_t, 5, "20Hz"),
                             gen.const("25Hz",     int_t, 6, "25Hz"),
                             gen.const("30Hz",     int_t, 7, "30Hz")],
                             "Magnetometer Rate Options")
gen.add("mag_rate",                       int_t,        0, "Magnetometer Rate",                             5, 0, 7, edit_method=mag_config_enum)

gyro_range_enum = gen.enum([ gen.const("2000DPS",      int_t, 0, "2000DPS"),
                             gen.const("1000DPS",      int_t, 1, "1000DPS"),
                             gen.const("500DPS",       int_t, 2, "500DPS"),
                             gen.const("250DPS",       int_t, 3, "250DPS"),
                             gen.const("125DPS",       int_t, 4, "125DPS")],
                             "Gyroscope Range Options")
gen.add("gyro_range",                     int_t,        0, "Gyroscope Range",                             0, 0, 4, edit_method=gyro_range_enum)

gyro_rate_enum = gen.enum([  gen.const("523Hz",      int_t, 0, "523Hz"),
                             gen.const("230Hz",      int_t, 1, "230Hz"),
                             gen.const("116Hz",      int_t, 2, "116Hz"),
                             gen.const("47Hz",       int_t, 3, "47Hz"),
                             gen.const("23Hz",       int_t, 4, "23Hz"),
                             gen.const("12Hz",       int_t, 5, "12Hz"),
                             gen.const("64Hz",       int_t, 6, "64Hz"),
                             gen.const("32Hz",       int_t, 7, "32Hz")],
                             "Gyroscope Rate Options")
gen.add("gyro_rate",                      int_t,        0, "Gyroscope Rate",                             7, 0, 7, edit_method=gyro_rate_enum)

acce_range_enum = gen.enum([ gen.const("2G",        int_t, 0, "2G"),
                             gen.const("4G",        int_t, 1, "4G"),
                             gen.const("8G",        int_t, 2, "8G"),
                             gen.const("16G",       int_t, 3, "16G")],
                             "Accelerometer Range Options")
gen.add("acc_range",                     int_t,        0, "Accelerometer Range",                             1, 0, 3, edit_method=acce_range_enum)

acce_rate_enum = gen.enum([  gen.const("7_81Hz",     int_t, 0, "7.81Hz"),
                             gen.const("15_63Hz",    int_t, 1, "15.63Hz"),
                             gen.const("31_25Hz",    int_t, 2, "31.25Hz"),
                             gen.const("62_5Hz",     int_t, 3, "62.5Hz"),
                             gen.const("125Hz",      int_t, 4, "125Hz"),
                             gen.const("250Hz",      int_t, 5, "250Hz"),
                             gen.const("500Hz",      int_t, 6, "500Hz"),
                             gen.const("1000Hz",     int_t, 7, "1000Hz")],
                             "Accelerometer Rate Options")
gen.add("acc_rate",                      int_t,        0, "Accelerometer Rate",                             3, 0, 7, edit_method=acce_rate_enum)



sensor_fusion_enum = gen.enum([ gen.const("OFF",            int_t, 0, "No Calibration"),
                                gen.const("ON",             int_t, 1, "Auto Calibration"),
                                gen.const("ON_NoMag",       int_t, 2, "Auto Calibration Without Mag"),
                                gen.const("ON_NoFastMag",   int_t, 3, "Auto Calibration Without Fast Mag")],
                                "Sensor Fusion Modes")
gen.add("fusion_mode",                   int_t,        0, "Sensor Fusion Mode",                             2, 0, 3, edit_method=sensor_fusion_enum)


exit(gen.generate(PACKAGE, "idmind_imu", "ImuBrickParams"))
